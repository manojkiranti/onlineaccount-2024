import { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';

import { displayError, displaySuccess } from '@/utils/displayMessageUtils';
import { Card, Skeleton, Typography, Flex, Input, Button } from 'antd';
import {
  useDisable2FAMutation,
  useEnable2FAMutation,
  useVerifyEnable2FAMutation,
} from '../api/profileAPI';
import Paragraph from 'antd/es/typography/Paragraph';

const { Title } = Typography;
const Settings = () => {
  const navigate = useNavigate();
  const [secret, setSecret] = useState('');
  const [qrCode, setQrCode] = useState<string | null>(null);
  const [code, setCode] = useState('');
  const [is2FAEnabled, setIs2FAEnabled] = useState(false);

  const [postEnable2FA, { isLoading: enable2FALoading }] =
    useEnable2FAMutation();
  const [verify2FACode, { isLoading: verify2FALoading }] =
    useVerifyEnable2FAMutation();
  const [disable2FACode, { isLoading: disable2FALoading }] =
    useDisable2FAMutation();

  useEffect(() => {
    postEnable2FA()
      .unwrap()
      .then((res) => {
        console.log(res);
        if (res.data.two_factor_enabled) {
          setIs2FAEnabled(true);
        } else {
          setSecret(res.data.secret);
          setQrCode(res.data.qr_code);
        }
      })
      .catch((err) => {
        console.log(err);
        displayError(err);
        // navigate('/')
      });
  }, []);

  const verifyCode = () => {
    verify2FACode({ code: Number(code) })
      .unwrap()
      .then((res) => {
        console.log(res);
        displaySuccess('2FA enabled successfully!');
      })
      .catch((err) => {
        console.log(err);
        displayError(err);
      });
  };

  const disable2FA = () => {
    disable2FACode({ code: Number(code) })
      .unwrap()
      .then((res) => {
        console.log(res);
        displaySuccess(res.data.message);
        // setIs2FAEnabled(false)
      })
      .catch((err) => {
        console.log(err);
        displayError(err);
      });
  };

  return (
    <div
      style={{
        width: '100%',
      }}
    >
      <div>
        <Typography.Title level={4}>
          {is2FAEnabled
            ? 'Disable 2 Factor Authentication'
            : 'Setup 2 Factor Authentication'}
        </Typography.Title>

        <Card>
          {!is2FAEnabled && (
            <Flex gap={30}>
              <div>
                {qrCode ? (
                  <div>
                    <img
                      src={`data:image/png;base64,${qrCode}`}
                      alt="2FA QR Code"
                      style={{ width: '200px', height: '200px' }}
                    />
                  </div>
                ) : (
                  <Skeleton.Image />
                )}
              </div>
              <div>
                <ul className="number-list">
                  <li>
                    <Title
                      level={5}
                      style={{ marginBottom: '1rem', marginTop: '0' }}
                    >
                      You will need an authenticator mobile app to complete this
                      process, such as one of the following:
                    </Title>
                    <Paragraph style={{ margin: '0' }} type="success">
                      Google Authenticator
                    </Paragraph>
                    <Paragraph style={{ margin: '0' }} type="success">
                      Microsoft Authenticator
                    </Paragraph>
                  </li>
                  <li>
                    <Title level={5} style={{ margin: '0 0 1rem' }}>
                      Scan the OR code with your authenticator
                    </Title>
                    <Paragraph type="secondary">
                      If you can't scan the code, you can enter this secret key
                      into your authenticator app. The secret key is:
                    </Paragraph>
                    <Input value={secret} readOnly={true} />
                  </li>
                  <li>
                    <Title level={5} style={{ margin: '0 0 1rem' }}>
                      After scanning the QR code above, enter the six-digit code
                      generated by your authenticator
                    </Title>
                    <Input.OTP
                      id="code"
                      value={code}
                      onChange={(e) => setCode(e)}
                      length={6}
                      size="large"
                    />
                  </li>
                </ul>

                <Button
                  onClick={verifyCode}
                  disabled={code.length < 6 || verify2FALoading}
                  type="primary"
                  size="large"
                  loading={verify2FALoading}
                >
                  Verify now
                </Button>
              </div>
            </Flex>
          )}
          {is2FAEnabled && (
            <div>
              <div style={{ margin: '0 0 1rem' }}>
                <Title level={5} style={{ margin: '0 0 1rem' }}>
                  To disable 2FA verification, please enter the 2FA code and
                  submit
                </Title>
                <Input.OTP
                  id="code"
                  value={code}
                  onChange={(e) => setCode(e)}
                  length={6}
                  size="large"
                />
              </div>
              <Button
                onClick={disable2FA}
                disabled={code.length < 6 || disable2FALoading}
                type="primary"
                size="large"
                loading={disable2FALoading}
              >
                Disable now
              </Button>
            </div>
          )}
        </Card>
      </div>
    </div>
  );
};

export default Settings;
